@baseUrl = {{$dotenv API_BASE_URL}}
@token = {{$dotenv ACCESS_TOKEN}}

### Create a new review (requires login)
POST {{baseUrl}}/reviews
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "bookId": "book_id_here",
  "rating": 5,
  "reviewText": "This is an amazing book! Highly recommended for anyone interested in technology and programming.",
  "isPublic": true
}

### Create review with minimal data
POST {{baseUrl}}/reviews
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "bookId": "book_id_here",
  "rating": 4
}

### Get reviews for a book (public)
GET {{baseUrl}}/reviews/book/book_id_here?page=1&limit=10

### Get all reviews by a user (requires auth - own reviews or admin)
GET {{baseUrl}}/reviews/user/user_id_here?page=1&limit=10
Authorization: Bearer {{token}}

### Update an existing review
PUT {{baseUrl}}/reviews/review_id_here
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "rating": 3,
  "reviewText": "Updated review text after reading more carefully.",
  "isPublic": false
}

### Update review rating only
PUT {{baseUrl}}/reviews/review_id_here
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "rating": 5
}

### Delete a review
DELETE {{baseUrl}}/reviews/review_id_here
Authorization: Bearer {{token}}

### Test invalid rating (should fail with 400)
POST {{baseUrl}}/reviews
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "bookId": "book_id_here",
  "rating": 6,
  "reviewText": "Invalid rating"
}

### Test missing bookId (should fail with 400)
POST {{baseUrl}}/reviews
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "rating": 5,
  "reviewText": "Missing book ID"
}
