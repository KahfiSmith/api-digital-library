@baseUrl = {{$dotenv API_BASE_URL}}
@token = {{$dotenv ACCESS_TOKEN}}
@token = {{token}}

### Get current user profile (requires login)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{token}}

### Update user profile
PUT {{baseUrl}}/users/profile
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firstName": "John Updated",
  "lastName": "Doe Updated"
}

### Upload avatar (requires form-data - replace with actual file path)
POST {{baseUrl}}/users/profile/avatar
Content-Type: multipart/form-data
Authorization: Bearer {{token}}

### Change password
PUT {{baseUrl}}/users/profile/password
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "currentPassword": "Password123!",
  "newPassword": "NewPassword123!"
}

### Get all users (admin/librarian only)
GET {{baseUrl}}/users?page=1&limit=10
Authorization: Bearer {{token}}

### Search users (admin/librarian only)
GET {{baseUrl}}/users?search=john&page=1&limit=10
Authorization: Bearer {{token}}

### Get users sorted by username (admin/librarian only)
GET {{baseUrl}}/users?sortBy=username&sortOrder=asc&page=1&limit=10
Authorization: Bearer {{token}}

### Get user by ID (admin/librarian only)
GET {{baseUrl}}/users/user_id_here
Authorization: Bearer {{token}}

### Test invalid password change (should fail with 401)
PUT {{baseUrl}}/api/v1/users/profile/password
Content-Type: application/json

{
  "currentPassword": "wrongpassword",
  "newPassword": "NewPassword123!"
}

### Test missing current password (should fail with 400)
PUT {{baseUrl}}/api/v1/users/profile/password
Content-Type: application/json

{
  "newPassword": "NewPassword123!"
}
