@baseUrl = http://localhost:3001

### Register new user (unique via timestamp)
POST {{baseUrl}}/api/v1/auth/register
Content-Type: application/json

{
  "username": "testuser{{$timestamp}}",
  "email": "test+{{$timestamp}}@example.com",
  "password": "Password123!",
  "firstName": "Test",
  "lastName": "User"
}

> {% 
// Save tokens from response for subsequent requests (VS Code REST Client)
try {
  if (response.status === 201 || response.status === 200) {
    const body = JSON.parse(response.body);
    const tokens = body?.data?.tokens || body?.tokens;
    if (tokens && tokens.accessToken && tokens.refreshToken) {
      client.global.set("accessToken", tokens.accessToken);
      client.global.set("refreshToken", tokens.refreshToken);
      client.log("Saved accessToken and refreshToken to globals");
    } else {
      client.log("Tokens not found in response body");
    }
  }
} catch (e) {
  client.log("Failed to parse JSON response: " + e.message);
}
%}

### Get current user using cookie (no header needed)
GET {{baseUrl}}/api/v1/auth/me

### Refresh token (uses cookie by default)
POST {{baseUrl}}/api/v1/auth/refresh

> {% 
// Rotate tokens (update globals)
try {
  if (response.status === 200) {
    const body = JSON.parse(response.body);
    const tokens = body?.data?.tokens || body?.tokens;
    if (tokens && tokens.accessToken && tokens.refreshToken) {
      client.global.set("accessToken", tokens.accessToken);
      client.global.set("refreshToken", tokens.refreshToken);
      client.log("Rotated tokens and updated globals");
    } else {
      client.log("Tokens not found in refresh response body");
    }
  }
} catch (e) {
  client.log("Failed to parse JSON response: " + e.message);
}
%}

### Logout (uses refresh cookie; no body needed)
POST {{baseUrl}}/api/v1/auth/logout
