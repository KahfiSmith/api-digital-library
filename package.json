{
  "name": "Api-Digital-Library",
  "version": "1.0.0",
  "description": "Digital Library API built with Node.js, TypeScript, Express.js, and Prisma",
  "main": "dist/server.js",
  "scripts": {
    "dev": "nodemon",
    "build": "cross-env NODE_OPTIONS=--max-old-space-size=512 rimraf dist && cross-env NODE_OPTIONS=--max-old-space-size=512 tsc",
    "start": "cross-env NODE_OPTIONS=--max-old-space-size=512 node dist/server.js",
    "start:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=512 node dist/server.js",
    "test": "echo \"Error: no test specified\" && exit 1",
    "test:watch": "echo \"Error: no test watch specified\" && exit 1",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "typecheck": "tsc --noEmit",
    "clean": "rimraf dist logs/*.log",
    "docker:build": "docker build -t digital-library-api .",
    "docker:run": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "docker:logs": "docker-compose logs -f api",
    "db:generate": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma generate",
    "db:push": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma db push",
    "db:migrate": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma migrate dev",
    "db:migrate:prod": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma migrate deploy",
    "db:seed": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma db seed",
    "db:studio": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma studio",
    "db:reset": "cross-env NODE_OPTIONS=--max-old-space-size=512 prisma migrate reset",
    "postinstall": "prisma generate"
  },
  "keywords": [
    "api",
    "digital-library",
    "nodejs",
    "typescript",
    "express",
    "prisma",
    "postgresql"
  ],
  "author": "",
  "license": "ISC",
  "packageManager": "pnpm@10.11.0",
  "prisma": {
    "seed": "tsx prisma/seed.ts"
  },
  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/bcrypt": "^5.0.0",
    "@types/compression": "^1.7.0",
    "@types/cors": "^2.8.0",
    "@types/express": "^4.17.0",
    "@types/jsonwebtoken": "^9.0.0",
    "@types/morgan": "^1.9.0",
    "@types/multer": "^1.4.0",
    "@types/node": "^24.3.0",
    "@types/uuid": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.33.0",
    "eslint-import-resolver-typescript": "^3.6.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^3.0.1",
    "nodemon": "^3.0.0",
    "prisma": "^5.0.0",
    "rimraf": "^6.0.1",
    "tsx": "^4.20.4",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@prisma/client": "^5.0.0",
    "@types/swagger-ui-express": "^4.1.8",
    "bcrypt": "^6.0.0",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^4.18.2",
    "express-async-errors": "^3.1.1",
    "express-rate-limit": "^8.0.1",
    "express-validator": "^7.2.1",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.1",
    "multer": "^2.0.2",
    "nodemailer": "^6.9.13",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0"
  }
}
